[{"/Users/munibawaqar/Desktop/Programming/search-app/src/App.js":"1","/Users/munibawaqar/Desktop/Programming/search-app/src/components/searchBar/SearchBar.js":"2","/Users/munibawaqar/Desktop/Programming/search-app/src/index.js":"3","/Users/munibawaqar/Desktop/Programming/search-app/src/components/imageList/ImageList.js":"4","/Users/munibawaqar/Desktop/Programming/search-app/src/components/imageCard/ImageCard.js":"5"},{"size":1141,"mtime":1609801824176,"results":"6","hashOfConfig":"7"},{"size":719,"mtime":1609802481175,"results":"8","hashOfConfig":"7"},{"size":219,"mtime":1609743262203,"results":"9","hashOfConfig":"7"},{"size":397,"mtime":1609816001342,"results":"10","hashOfConfig":"7"},{"size":632,"mtime":1609817296058,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uxro13",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/munibawaqar/Desktop/Programming/search-app/src/App.js",[],"/Users/munibawaqar/Desktop/Programming/search-app/src/components/searchBar/SearchBar.js",[],"/Users/munibawaqar/Desktop/Programming/search-app/src/index.js",[],"/Users/munibawaqar/Desktop/Programming/search-app/src/components/imageList/ImageList.js",[],"/Users/munibawaqar/Desktop/Programming/search-app/src/components/imageCard/ImageCard.js",["23","24","25","26"],"import React, { useEffect, useRef, useState } from \"react\";\n\nconst ImageCard = (props) => {\n  const [span, setSpan] = useState(0);\n  //refs give access to a single DOM element\n\n  const imageRef = useRef(0);\n  const { description, urls } = props.image;\n\n  useEffect(() => {\n    console.log(`this is imageRef`);\n    console.log(imageRef.current);\n    console.log(imageRef.current.clientHeight);\n    return () => {\n      const spans = imageRef.current.clientHeight;\n    };\n  });\n  return (\n    <div className=\"image-card\">\n      <img ref={imageRef} alt={description} src={urls.regular} />\n    </div>\n  );\n};\n\nexport default ImageCard;\n",{"ruleId":"27","severity":1,"message":"28","line":4,"column":10,"nodeType":"29","messageId":"30","endLine":4,"endColumn":14},{"ruleId":"27","severity":1,"message":"31","line":4,"column":16,"nodeType":"29","messageId":"30","endLine":4,"endColumn":23},{"ruleId":"27","severity":1,"message":"32","line":15,"column":13,"nodeType":"29","messageId":"30","endLine":15,"endColumn":18},{"ruleId":"33","severity":1,"message":"34","line":15,"column":30,"nodeType":"29","endLine":15,"endColumn":37},"no-unused-vars","'span' is assigned a value but never used.","Identifier","unusedVar","'setSpan' is assigned a value but never used.","'spans' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'imageRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'imageRef.current' to a variable inside the effect, and use that variable in the cleanup function."]